// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

function sum(num1, num2) {
  return num1 + num2 | 0;
}

function meterToMillimeter(m) {
  return m * 1000.0;
}

function daysToHours(days) {
  return Caml_int32.imul(days, 24);
}

function hoursToMinutes(hours) {
  return Caml_int32.imul(hours, 60);
}

function minutesToSeconds(minutes) {
  return Caml_int32.imul(minutes, 60);
}

function convert(days, hours, minutes, seconds) {
  var secondsInDay = Caml_int32.imul(Caml_int32.imul(Caml_int32.imul(days, 24), 60), 60);
  var secondsInHours = Caml_int32.imul(Caml_int32.imul(hours, 60), 60);
  var secondsInMinutes = Caml_int32.imul(minutes, 60);
  return ((secondsInDay + secondsInHours | 0) + secondsInMinutes | 0) + seconds | 0;
}

var DaysToSeconds = {
  daysToHours: daysToHours,
  hoursToMinutes: hoursToMinutes,
  minutesToSeconds: minutesToSeconds,
  convert: convert
};

function getSalaryRaise(salary, increase) {
  var salaryRaise = salary * (increase / 100.0);
  return salary + salaryRaise;
}

function getDiscount(price, discount) {
  var discountValue = price * (discount / 100.0);
  return price - discountValue;
}

function getTripTime(distance, avgSpeed) {
  return distance / 1000.0 / avgSpeed;
}

function celsiusToFahreinheit(c) {
  return 9.0 * c / 5.0 + 32.0;
}

function fahreinheitToCelsius(f) {
  return (f - 32.0) * 5.0 / 9.0;
}

function calcCarRentalPrice(km, days) {
  return days * 60.0 + km * 0.15;
}

exports.sum = sum;
exports.meterToMillimeter = meterToMillimeter;
exports.DaysToSeconds = DaysToSeconds;
exports.getSalaryRaise = getSalaryRaise;
exports.getDiscount = getDiscount;
exports.getTripTime = getTripTime;
exports.celsiusToFahreinheit = celsiusToFahreinheit;
exports.fahreinheitToCelsius = fahreinheitToCelsius;
exports.calcCarRentalPrice = calcCarRentalPrice;
/* No side effect */
